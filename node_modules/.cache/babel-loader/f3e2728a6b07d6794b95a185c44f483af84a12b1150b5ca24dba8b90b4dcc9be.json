{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\n// Deterministic pseudo-random for consistent placement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\n// Collision detection for rectangles\nfunction isOverlapping(a, b) {\n  return !(a.left + a.width < b.left || a.left > b.left + b.width || a.top + a.height < b.top || a.top > b.top + b.height);\n}\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Container size (virtual canvas)\n  const containerWidth = 1600;\n  const containerHeight = 2000;\n  const minFontSize = 1.1;\n  const maxFontSize = 2.3;\n  const maxWidth = 320;\n  const lineHeight = 1.2;\n  const maxTries = 30;\n\n  // Estimate text height based on font size and length\n  function estimateTextHeight(text, fontSize) {\n    // Estimate number of lines\n    const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n    const lines = Math.ceil(text.length / charsPerLine);\n    return lines * fontSize * 16 * lineHeight;\n  }\n\n  // Place messages without overlap\n  function getScatteredMessages(messages) {\n    const placed = [];\n    messages.forEach((msg, idx) => {\n      const seed = getSeed(msg.id || \"\" + idx);\n      const fontSize = minFontSize + seededRandom(seed + 2) * (maxFontSize - minFontSize);\n      const width = maxWidth;\n      const height = estimateTextHeight(msg.text, fontSize);\n      let found = false;\n      let left, top;\n      for (let attempt = 0; attempt < maxTries; attempt++) {\n        const randX = seededRandom(seed + attempt) * 0.8 + 0.1; // 0.1 to 0.9\n        const randY = seededRandom(seed + 100 + attempt) * 0.8 + 0.1;\n        left = randX * (containerWidth - width);\n        top = randY * (containerHeight - height);\n        const rect = {\n          left,\n          top,\n          width,\n          height\n        };\n        if (!placed.some(p => isOverlapping(rect, p))) {\n          found = true;\n          placed.push({\n            ...rect,\n            fontSize,\n            text: msg.text,\n            id: msg.id\n          });\n          break;\n        }\n      }\n      if (!found) {\n        // Place anyway (may overlap)\n        placed.push({\n          left,\n          top,\n          width,\n          height,\n          fontSize,\n          text: msg.text,\n          id: msg.id\n        });\n      }\n    });\n    return placed;\n  }\n  const scatteredMessages = getScatteredMessages(messages);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp()\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-auto\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        background: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: containerWidth,\n          height: containerHeight,\n          margin: \"0 auto\"\n        },\n        children: [scatteredMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: msg.left,\n            top: msg.top,\n            fontSize: `${msg.fontSize}em`,\n            color: \"white\",\n            maxWidth: maxWidth,\n            wordBreak: \"break-word\",\n            pointerEvents: \"auto\",\n            userSelect: \"text\",\n            fontWeight: 400,\n            opacity: 0.95,\n            lineHeight\n          },\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\",\n      autoComplete: \"off\",\n      style: {\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Send a message into the void...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lx4WD8Wg6uhyIDG8gqL8xB1y7lk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","seededRandom","seed","x","Math","sin","floor","getSeed","str","hash","i","length","charCodeAt","isOverlapping","a","b","left","width","top","height","App","_s","messages","setMessages","input","setInput","messagesEndRef","q","unsubscribe","querySnapshot","msgs","forEach","doc","push","id","data","containerWidth","containerHeight","minFontSize","maxFontSize","maxWidth","lineHeight","maxTries","estimateTextHeight","text","fontSize","charsPerLine","lines","ceil","getScatteredMessages","placed","msg","idx","found","attempt","randX","randY","rect","some","p","scatteredMessages","sendMessage","e","preventDefault","trimmed","trim","timestamp","className","children","style","minHeight","background","position","margin","map","color","wordBreak","pointerEvents","userSelect","fontWeight","opacity","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","autoComplete","bottom","zIndex","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\n// Deterministic pseudo-random for consistent placement\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\n// Collision detection for rectangles\nfunction isOverlapping(a, b) {\n  return !(\n    a.left + a.width < b.left ||\n    a.left > b.left + b.width ||\n    a.top + a.height < b.top ||\n    a.top > b.top + b.height\n  );\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push({ id: doc.id, ...doc.data() });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Container size (virtual canvas)\n  const containerWidth = 1600;\n  const containerHeight = 2000;\n  const minFontSize = 1.1;\n  const maxFontSize = 2.3;\n  const maxWidth = 320;\n  const lineHeight = 1.2;\n  const maxTries = 30;\n\n  // Estimate text height based on font size and length\n  function estimateTextHeight(text, fontSize) {\n    // Estimate number of lines\n    const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n    const lines = Math.ceil(text.length / charsPerLine);\n    return lines * fontSize * 16 * lineHeight;\n  }\n\n  // Place messages without overlap\n  function getScatteredMessages(messages) {\n    const placed = [];\n    messages.forEach((msg, idx) => {\n      const seed = getSeed(msg.id || \"\" + idx);\n      const fontSize = minFontSize + seededRandom(seed + 2) * (maxFontSize - minFontSize);\n      const width = maxWidth;\n      const height = estimateTextHeight(msg.text, fontSize);\n      let found = false;\n      let left, top;\n      for (let attempt = 0; attempt < maxTries; attempt++) {\n        const randX = seededRandom(seed + attempt) * 0.8 + 0.1; // 0.1 to 0.9\n        const randY = seededRandom(seed + 100 + attempt) * 0.8 + 0.1;\n        left = randX * (containerWidth - width);\n        top = randY * (containerHeight - height);\n        const rect = { left, top, width, height };\n        if (!placed.some((p) => isOverlapping(rect, p))) {\n          found = true;\n          placed.push({ ...rect, fontSize, text: msg.text, id: msg.id });\n          break;\n        }\n      }\n      if (!found) {\n        // Place anyway (may overlap)\n        placed.push({ left, top, width, height, fontSize, text: msg.text, id: msg.id });\n      }\n    });\n    return placed;\n  }\n\n  const scatteredMessages = getScatteredMessages(messages);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-black text-white\">\n      <div\n        className=\"flex-1 relative overflow-auto\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: 0,\n          background: \"black\",\n        }}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            width: containerWidth,\n            height: containerHeight,\n            margin: \"0 auto\",\n          }}\n        >\n          {scatteredMessages.map((msg) => (\n            <div\n              key={msg.id}\n              style={{\n                position: \"absolute\",\n                left: msg.left,\n                top: msg.top,\n                fontSize: `${msg.fontSize}em`,\n                color: \"white\",\n                maxWidth: maxWidth,\n                wordBreak: \"break-word\",\n                pointerEvents: \"auto\",\n                userSelect: \"text\",\n                fontWeight: 400,\n                opacity: 0.95,\n                lineHeight,\n              }}\n            >\n              {msg.text}\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n      <form\n        onSubmit={sendMessage}\n        className=\"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\"\n        autoComplete=\"off\"\n        style={{ position: \"sticky\", bottom: 0, zIndex: 10 }}\n      >\n        <input\n          className=\"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Send a message into the void...\"\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          className=\"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}