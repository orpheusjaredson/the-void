{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\n// Deterministic pseudo-random for consistent placement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Container size (virtual canvas)\n  const containerWidth = 1600;\n  const containerHeight = 2000;\n\n  // Generate random positions and sizes for each message\n  const scatteredMessages = messages.map((msg, idx) => {\n    const seed = getSeed(msg.id || \"\" + idx);\n    const randX = seededRandom(seed) * 0.8 + 0.1; // 0.1 to 0.9\n    const randY = seededRandom(seed + 1) * 0.8 + 0.1; // 0.1 to 0.9\n    const randSize = 1.1 + seededRandom(seed + 2) * 1.2; // 1.1em to 2.3em\n    return {\n      ...msg,\n      left: randX * containerWidth,\n      top: randY * containerHeight,\n      fontSize: `${randSize}em`\n    };\n  });\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp()\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-auto\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        background: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: containerWidth,\n          height: containerHeight,\n          margin: \"0 auto\"\n        },\n        children: [scatteredMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: msg.left,\n            top: msg.top,\n            fontSize: msg.fontSize,\n            color: \"white\",\n            maxWidth: 320,\n            wordBreak: \"break-word\",\n            pointerEvents: \"auto\",\n            userSelect: \"text\",\n            fontWeight: 400,\n            opacity: 0.95\n          },\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\",\n      autoComplete: \"off\",\n      style: {\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Send a message into the void...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lx4WD8Wg6uhyIDG8gqL8xB1y7lk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","seededRandom","seed","x","Math","sin","floor","getSeed","str","hash","i","length","charCodeAt","App","_s","messages","setMessages","input","setInput","messagesEndRef","q","unsubscribe","querySnapshot","msgs","forEach","doc","push","id","data","containerWidth","containerHeight","scatteredMessages","map","msg","idx","randX","randY","randSize","left","top","fontSize","sendMessage","e","preventDefault","trimmed","trim","text","timestamp","className","children","style","width","height","minHeight","background","position","margin","color","maxWidth","wordBreak","pointerEvents","userSelect","fontWeight","opacity","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","autoComplete","bottom","zIndex","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\n// Deterministic pseudo-random for consistent placement\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push({ id: doc.id, ...doc.data() });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Container size (virtual canvas)\n  const containerWidth = 1600;\n  const containerHeight = 2000;\n\n  // Generate random positions and sizes for each message\n  const scatteredMessages = messages.map((msg, idx) => {\n    const seed = getSeed(msg.id || \"\" + idx);\n    const randX = seededRandom(seed) * 0.8 + 0.1; // 0.1 to 0.9\n    const randY = seededRandom(seed + 1) * 0.8 + 0.1; // 0.1 to 0.9\n    const randSize = 1.1 + seededRandom(seed + 2) * 1.2; // 1.1em to 2.3em\n    return {\n      ...msg,\n      left: randX * containerWidth,\n      top: randY * containerHeight,\n      fontSize: `${randSize}em`,\n    };\n  });\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-black text-white\">\n      <div\n        className=\"flex-1 relative overflow-auto\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          minHeight: 0,\n          background: \"black\",\n        }}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            width: containerWidth,\n            height: containerHeight,\n            margin: \"0 auto\",\n          }}\n        >\n          {scatteredMessages.map((msg) => (\n            <div\n              key={msg.id}\n              style={{\n                position: \"absolute\",\n                left: msg.left,\n                top: msg.top,\n                fontSize: msg.fontSize,\n                color: \"white\",\n                maxWidth: 320,\n                wordBreak: \"break-word\",\n                pointerEvents: \"auto\",\n                userSelect: \"text\",\n                fontWeight: 400,\n                opacity: 0.95,\n              }}\n            >\n              {msg.text}\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n      <form\n        onSubmit={sendMessage}\n        className=\"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\"\n        autoComplete=\"off\"\n        style={{ position: \"sticky\", bottom: 0, zIndex: 10 }}\n      >\n        <input\n          className=\"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Send a message into the void...\"\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          className=\"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}