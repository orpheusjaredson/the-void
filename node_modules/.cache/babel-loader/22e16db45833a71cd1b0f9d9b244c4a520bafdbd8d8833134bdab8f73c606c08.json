{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [floating, setFloating] = useState([]); // Active floating messages\n  const animationRef = useRef();\n  const nextIdRef = useRef(0);\n  const prepopulatedRef = useRef(false);\n  const prevWidthRef = useRef(window.innerWidth);\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Only update viewport, don't reset floating messages on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport(prev => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setFloating(floaters => floaters.map(f => {\n          // Calculate ratio of previous X position\n          const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n          const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n          const newX = ratio * (newWidth - newMsgWidth);\n          return {\n            ...f,\n            x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n            width: newMsgWidth\n          };\n        }));\n        prevWidthRef.current = newWidth;\n        return {\n          width: newWidth,\n          height: window.innerHeight\n        };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Animation: floating messages rise up\n  useEffect(() => {\n    if (!messages.length) return;\n    let running = true;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const minSpeed = 40; // px/sec\n    const maxSpeed = 90; // px/sec\n    const spawnInterval = 700; // ms between spawns\n    const maxFloating = Math.floor(viewport.height / 60) + 8;\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n    function spawnMessage(yOverride) {\n      if (!messages.length) return null;\n      // Pick a random message\n      const msgIdx = Math.floor(Math.random() * messages.length);\n      const msg = messages[msgIdx];\n      // Random X, font size, speed\n      const fontSize = randomBetween(minFontSize, maxFontSize);\n      const width = maxWidth;\n      const height = estimateTextHeight(msg.text, fontSize);\n      const x = randomBetween(0, viewport.width - width);\n      const speed = randomBetween(minSpeed, maxSpeed); // px/sec\n      const id = `floating-${nextIdRef.current++}`;\n      return {\n        id,\n        text: msg.text,\n        x,\n        y: typeof yOverride === 'number' ? yOverride : viewport.height,\n        // Start at bottom or custom\n        fontSize,\n        width,\n        height,\n        speed\n      };\n    }\n    let lastSpawn = Date.now();\n    let floaters = [];\n    let lastFrame = Date.now();\n\n    // Pre-populate floaters only on first mount\n    if (!prepopulatedRef.current && floating.length === 0) {\n      const initialCount = Math.floor(viewport.height / 60) + 8;\n      for (let i = 0; i < initialCount; i++) {\n        // Random y between 0 (top) and viewport.height (bottom)\n        const y = randomBetween(0, viewport.height);\n        const msg = spawnMessage(y);\n        if (msg) floaters.push(msg);\n      }\n      setFloating([...floaters]);\n      prepopulatedRef.current = true;\n    } else {\n      floaters = [...floating];\n    }\n    function animate() {\n      if (!running) return;\n      const now = Date.now();\n      const dt = (now - lastFrame) / 1000;\n      lastFrame = now;\n      // Move all floaters up\n      floaters = floaters.map(f => ({\n        ...f,\n        y: f.y - f.speed * dt\n      })).filter(f => f.y + f.height > 0); // Remove if off top\n      // Spawn new if needed\n      if (now - lastSpawn > spawnInterval && floaters.length < maxFloating) {\n        const newMsg = spawnMessage();\n        if (newMsg) {\n          floaters.push(newMsg);\n        }\n        lastSpawn = now;\n      }\n      setFloating([...floaters]);\n      animationRef.current = requestAnimationFrame(animate);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      cancelAnimationFrame(animationRef.current);\n    };\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp()\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-hidden\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        background: \"black\"\n      },\n      children: floating.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: msg.x,\n          top: msg.y,\n          fontSize: `${msg.fontSize}em`,\n          color: \"white\",\n          maxWidth: msg.width,\n          wordBreak: \"break-word\",\n          pointerEvents: \"auto\",\n          userSelect: \"text\",\n          fontWeight: 400,\n          opacity: 0.95,\n          lineHeight: 1.2,\n          transition: \"none\"\n        },\n        children: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\",\n      autoComplete: \"off\",\n      style: {\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Send a message into the void...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0+l98cmqxXWyUYdaqqMS+xXxB+s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","seededRandom","seed","x","Math","sin","floor","getSeed","str","hash","i","length","charCodeAt","randomBetween","a","b","random","App","_s","messages","setMessages","input","setInput","viewport","setViewport","width","window","innerWidth","height","innerHeight","floating","setFloating","animationRef","nextIdRef","prepopulatedRef","prevWidthRef","q","unsubscribe","querySnapshot","msgs","forEach","doc","push","id","data","handleResize","prev","newWidth","oldWidth","current","floaters","map","f","ratio","newMsgWidth","min","newX","max","addEventListener","removeEventListener","running","minFontSize","maxFontSize","maxWidth","minSpeed","maxSpeed","spawnInterval","maxFloating","estimateTextHeight","text","fontSize","charsPerLine","lines","ceil","spawnMessage","yOverride","msgIdx","msg","speed","y","lastSpawn","Date","now","lastFrame","initialCount","animate","dt","filter","newMsg","requestAnimationFrame","cancelAnimationFrame","sendMessage","e","preventDefault","trimmed","trim","timestamp","className","children","style","minHeight","background","position","left","top","color","wordBreak","pointerEvents","userSelect","fontWeight","opacity","lineHeight","transition","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","bottom","zIndex","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [floating, setFloating] = useState([]); // Active floating messages\n  const animationRef = useRef();\n  const nextIdRef = useRef(0);\n  const prepopulatedRef = useRef(false);\n  const prevWidthRef = useRef(window.innerWidth);\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push({ id: doc.id, ...doc.data() });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Only update viewport, don't reset floating messages on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport((prev) => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setFloating((floaters) =>\n          floaters.map((f) => {\n            // Calculate ratio of previous X position\n            const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n            const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n            const newX = ratio * (newWidth - newMsgWidth);\n            return {\n              ...f,\n              x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n              width: newMsgWidth,\n            };\n          })\n        );\n        prevWidthRef.current = newWidth;\n        return { width: newWidth, height: window.innerHeight };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Animation: floating messages rise up\n  useEffect(() => {\n    if (!messages.length) return;\n    let running = true;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const minSpeed = 40; // px/sec\n    const maxSpeed = 90; // px/sec\n    const spawnInterval = 700; // ms between spawns\n    const maxFloating = Math.floor(viewport.height / 60) + 8;\n\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n\n    function spawnMessage(yOverride) {\n      if (!messages.length) return null;\n      // Pick a random message\n      const msgIdx = Math.floor(Math.random() * messages.length);\n      const msg = messages[msgIdx];\n      // Random X, font size, speed\n      const fontSize = randomBetween(minFontSize, maxFontSize);\n      const width = maxWidth;\n      const height = estimateTextHeight(msg.text, fontSize);\n      const x = randomBetween(0, viewport.width - width);\n      const speed = randomBetween(minSpeed, maxSpeed); // px/sec\n      const id = `floating-${nextIdRef.current++}`;\n      return {\n        id,\n        text: msg.text,\n        x,\n        y: typeof yOverride === 'number' ? yOverride : viewport.height, // Start at bottom or custom\n        fontSize,\n        width,\n        height,\n        speed,\n      };\n    }\n\n    let lastSpawn = Date.now();\n    let floaters = [];\n    let lastFrame = Date.now();\n\n    // Pre-populate floaters only on first mount\n    if (!prepopulatedRef.current && floating.length === 0) {\n      const initialCount = Math.floor(viewport.height / 60) + 8;\n      for (let i = 0; i < initialCount; i++) {\n        // Random y between 0 (top) and viewport.height (bottom)\n        const y = randomBetween(0, viewport.height);\n        const msg = spawnMessage(y);\n        if (msg) floaters.push(msg);\n      }\n      setFloating([...floaters]);\n      prepopulatedRef.current = true;\n    } else {\n      floaters = [...floating];\n    }\n\n    function animate() {\n      if (!running) return;\n      const now = Date.now();\n      const dt = (now - lastFrame) / 1000;\n      lastFrame = now;\n      // Move all floaters up\n      floaters = floaters\n        .map((f) => ({ ...f, y: f.y - f.speed * dt }))\n        .filter((f) => f.y + f.height > 0); // Remove if off top\n      // Spawn new if needed\n      if (now - lastSpawn > spawnInterval && floaters.length < maxFloating) {\n        const newMsg = spawnMessage();\n        if (newMsg) {\n          floaters.push(newMsg);\n        }\n        lastSpawn = now;\n      }\n      setFloating([...floaters]);\n      animationRef.current = requestAnimationFrame(animate);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      cancelAnimationFrame(animationRef.current);\n    };\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-black text-white\">\n      <div\n        className=\"flex-1 relative overflow-hidden\"\n        style={{ width: \"100%\", height: \"100%\", minHeight: 0, background: \"black\" }}\n      >\n        {floating.map((msg) => (\n          <div\n            key={msg.id}\n            style={{\n              position: \"absolute\",\n              left: msg.x,\n              top: msg.y,\n              fontSize: `${msg.fontSize}em`,\n              color: \"white\",\n              maxWidth: msg.width,\n              wordBreak: \"break-word\",\n              pointerEvents: \"auto\",\n              userSelect: \"text\",\n              fontWeight: 400,\n              opacity: 0.95,\n              lineHeight: 1.2,\n              transition: \"none\",\n            }}\n          >\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <form\n        onSubmit={sendMessage}\n        className=\"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\"\n        autoComplete=\"off\"\n        style={{ position: \"sticky\", bottom: 0, zIndex: 10 }}\n      >\n        <input\n          className=\"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Send a message into the void...\"\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          className=\"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErG,SAASC,YAAYA,CAACC,IAAI,EAAE;EAC1B,IAAIC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACH,IAAI,CAAC,GAAG,KAAK;EAC9B,OAAOC,CAAC,GAAGC,IAAI,CAACE,KAAK,CAACH,CAAC,CAAC;AAC1B;AAEA,SAASI,OAAOA,CAACC,GAAG,EAAE;EACpB,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCD,IAAI,GAAGD,GAAG,CAACI,UAAU,CAACF,CAAC,CAAC,IAAI,CAACD,IAAI,IAAI,CAAC,IAAIA,IAAI,CAAC;EACjD;EACA,OAAOA,IAAI;AACb;AAEA,SAASI,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC3B,OAAOD,CAAC,GAAGV,IAAI,CAACY,MAAM,CAAC,CAAC,IAAID,CAAC,GAAGD,CAAC,CAAC;AACpC;AAEA,eAAe,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC;IAAEkC,KAAK,EAAEC,MAAM,CAACC,UAAU;IAAEC,MAAM,EAAEF,MAAM,CAACG;EAAY,CAAC,CAAC;EAClG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMyC,YAAY,GAAG1C,MAAM,CAAC,CAAC;EAC7B,MAAM2C,SAAS,GAAG3C,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAM4C,eAAe,GAAG5C,MAAM,CAAC,KAAK,CAAC;EACrC,MAAM6C,YAAY,GAAG7C,MAAM,CAACoC,MAAM,CAACC,UAAU,CAAC;;EAE9C;EACAtC,SAAS,CAAC,MAAM;IACd,MAAM+C,CAAC,GAAGzC,KAAK,CAACF,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEI,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACxE,MAAMyC,WAAW,GAAGxC,UAAU,CAACuC,CAAC,EAAGE,aAAa,IAAK;MACnD,MAAMC,IAAI,GAAG,EAAE;MACfD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BF,IAAI,CAACG,IAAI,CAAC;UAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;UAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;QAAE,CAAC,CAAC;MAC1C,CAAC,CAAC;MACFxB,WAAW,CAACmB,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,OAAOF,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhD,SAAS,CAAC,MAAM;IACd,MAAMwD,YAAY,GAAGA,CAAA,KAAM;MACzBrB,WAAW,CAAEsB,IAAI,IAAK;QACpB,MAAMC,QAAQ,GAAGrB,MAAM,CAACC,UAAU;QAClC,MAAMqB,QAAQ,GAAGb,YAAY,CAACc,OAAO;QACrClB,WAAW,CAAEmB,QAAQ,IACnBA,QAAQ,CAACC,GAAG,CAAEC,CAAC,IAAK;UAClB;UACA,MAAMC,KAAK,GAAGL,QAAQ,GAAGI,CAAC,CAAC3B,KAAK,GAAG2B,CAAC,CAACjD,CAAC,IAAI6C,QAAQ,GAAGI,CAAC,CAAC3B,KAAK,CAAC,GAAG,CAAC;UACjE,MAAM6B,WAAW,GAAGlD,IAAI,CAACmD,GAAG,CAACH,CAAC,CAAC3B,KAAK,EAAE,GAAG,GAAGsB,QAAQ,EAAE,GAAG,CAAC;UAC1D,MAAMS,IAAI,GAAGH,KAAK,IAAIN,QAAQ,GAAGO,WAAW,CAAC;UAC7C,OAAO;YACL,GAAGF,CAAC;YACJjD,CAAC,EAAEC,IAAI,CAACqD,GAAG,CAAC,CAAC,EAAErD,IAAI,CAACmD,GAAG,CAACC,IAAI,EAAET,QAAQ,GAAGO,WAAW,CAAC,CAAC;YACtD7B,KAAK,EAAE6B;UACT,CAAC;QACH,CAAC,CACH,CAAC;QACDnB,YAAY,CAACc,OAAO,GAAGF,QAAQ;QAC/B,OAAO;UAAEtB,KAAK,EAAEsB,QAAQ;UAAEnB,MAAM,EAAEF,MAAM,CAACG;QAAY,CAAC;MACxD,CAAC,CAAC;IACJ,CAAC;IACDH,MAAM,CAACgC,gBAAgB,CAAC,QAAQ,EAAEb,YAAY,CAAC;IAC/C,OAAO,MAAMnB,MAAM,CAACiC,mBAAmB,CAAC,QAAQ,EAAEd,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,QAAQ,CAACR,MAAM,EAAE;IACtB,IAAIiD,OAAO,GAAG,IAAI;IAClB,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAMC,QAAQ,GAAG3D,IAAI,CAACmD,GAAG,CAAC,GAAG,GAAGhC,QAAQ,CAACE,KAAK,EAAE,GAAG,CAAC;IACpD,MAAMuC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;IAC3B,MAAMC,WAAW,GAAG/D,IAAI,CAACE,KAAK,CAACiB,QAAQ,CAACK,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;IAExD,SAASwC,kBAAkBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;MAC1C,MAAMC,YAAY,GAAGnE,IAAI,CAACE,KAAK,CAACyD,QAAQ,IAAIO,QAAQ,GAAG,EAAE,CAAC,CAAC;MAC3D,MAAME,KAAK,GAAGpE,IAAI,CAACqE,IAAI,CAACJ,IAAI,CAAC1D,MAAM,GAAG4D,YAAY,CAAC;MACnD,OAAOC,KAAK,GAAGF,QAAQ,GAAG,EAAE,GAAG,GAAG;IACpC;IAEA,SAASI,YAAYA,CAACC,SAAS,EAAE;MAC/B,IAAI,CAACxD,QAAQ,CAACR,MAAM,EAAE,OAAO,IAAI;MACjC;MACA,MAAMiE,MAAM,GAAGxE,IAAI,CAACE,KAAK,CAACF,IAAI,CAACY,MAAM,CAAC,CAAC,GAAGG,QAAQ,CAACR,MAAM,CAAC;MAC1D,MAAMkE,GAAG,GAAG1D,QAAQ,CAACyD,MAAM,CAAC;MAC5B;MACA,MAAMN,QAAQ,GAAGzD,aAAa,CAACgD,WAAW,EAAEC,WAAW,CAAC;MACxD,MAAMrC,KAAK,GAAGsC,QAAQ;MACtB,MAAMnC,MAAM,GAAGwC,kBAAkB,CAACS,GAAG,CAACR,IAAI,EAAEC,QAAQ,CAAC;MACrD,MAAMnE,CAAC,GAAGU,aAAa,CAAC,CAAC,EAAEU,QAAQ,CAACE,KAAK,GAAGA,KAAK,CAAC;MAClD,MAAMqD,KAAK,GAAGjE,aAAa,CAACmD,QAAQ,EAAEC,QAAQ,CAAC,CAAC,CAAC;MACjD,MAAMtB,EAAE,GAAG,YAAYV,SAAS,CAACgB,OAAO,EAAE,EAAE;MAC5C,OAAO;QACLN,EAAE;QACF0B,IAAI,EAAEQ,GAAG,CAACR,IAAI;QACdlE,CAAC;QACD4E,CAAC,EAAE,OAAOJ,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGpD,QAAQ,CAACK,MAAM;QAAE;QAChE0C,QAAQ;QACR7C,KAAK;QACLG,MAAM;QACNkD;MACF,CAAC;IACH;IAEA,IAAIE,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1B,IAAIhC,QAAQ,GAAG,EAAE;IACjB,IAAIiC,SAAS,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC;;IAE1B;IACA,IAAI,CAAChD,eAAe,CAACe,OAAO,IAAInB,QAAQ,CAACnB,MAAM,KAAK,CAAC,EAAE;MACrD,MAAMyE,YAAY,GAAGhF,IAAI,CAACE,KAAK,CAACiB,QAAQ,CAACK,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;MACzD,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0E,YAAY,EAAE1E,CAAC,EAAE,EAAE;QACrC;QACA,MAAMqE,CAAC,GAAGlE,aAAa,CAAC,CAAC,EAAEU,QAAQ,CAACK,MAAM,CAAC;QAC3C,MAAMiD,GAAG,GAAGH,YAAY,CAACK,CAAC,CAAC;QAC3B,IAAIF,GAAG,EAAE3B,QAAQ,CAACR,IAAI,CAACmC,GAAG,CAAC;MAC7B;MACA9C,WAAW,CAAC,CAAC,GAAGmB,QAAQ,CAAC,CAAC;MAC1BhB,eAAe,CAACe,OAAO,GAAG,IAAI;IAChC,CAAC,MAAM;MACLC,QAAQ,GAAG,CAAC,GAAGpB,QAAQ,CAAC;IAC1B;IAEA,SAASuD,OAAOA,CAAA,EAAG;MACjB,IAAI,CAACzB,OAAO,EAAE;MACd,MAAMsB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,MAAMI,EAAE,GAAG,CAACJ,GAAG,GAAGC,SAAS,IAAI,IAAI;MACnCA,SAAS,GAAGD,GAAG;MACf;MACAhC,QAAQ,GAAGA,QAAQ,CAChBC,GAAG,CAAEC,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAE2B,CAAC,EAAE3B,CAAC,CAAC2B,CAAC,GAAG3B,CAAC,CAAC0B,KAAK,GAAGQ;MAAG,CAAC,CAAC,CAAC,CAC7CC,MAAM,CAAEnC,CAAC,IAAKA,CAAC,CAAC2B,CAAC,GAAG3B,CAAC,CAACxB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MACtC;MACA,IAAIsD,GAAG,GAAGF,SAAS,GAAGd,aAAa,IAAIhB,QAAQ,CAACvC,MAAM,GAAGwD,WAAW,EAAE;QACpE,MAAMqB,MAAM,GAAGd,YAAY,CAAC,CAAC;QAC7B,IAAIc,MAAM,EAAE;UACVtC,QAAQ,CAACR,IAAI,CAAC8C,MAAM,CAAC;QACvB;QACAR,SAAS,GAAGE,GAAG;MACjB;MACAnD,WAAW,CAAC,CAAC,GAAGmB,QAAQ,CAAC,CAAC;MAC1BlB,YAAY,CAACiB,OAAO,GAAGwC,qBAAqB,CAACJ,OAAO,CAAC;IACvD;IACArD,YAAY,CAACiB,OAAO,GAAGwC,qBAAqB,CAACJ,OAAO,CAAC;IACrD,OAAO,MAAM;MACXzB,OAAO,GAAG,KAAK;MACf8B,oBAAoB,CAAC1D,YAAY,CAACiB,OAAO,CAAC;IAC5C,CAAC;IACD;EACF,CAAC,EAAE,CAAC9B,QAAQ,EAAEI,QAAQ,CAACE,KAAK,EAAEF,QAAQ,CAACK,MAAM,CAAC,CAAC;EAE/C,MAAM+D,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAGzE,KAAK,CAAC0E,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACD,OAAO,EAAE;IACd,MAAMpG,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAE;MACvC6E,IAAI,EAAEyB,OAAO;MACbE,SAAS,EAAElG,eAAe,CAAC;IAC7B,CAAC,CAAC;IACFwB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEtB,OAAA;IAAKiG,SAAS,EAAC,4CAA4C;IAAAC,QAAA,gBACzDlG,OAAA;MACEiG,SAAS,EAAC,iCAAiC;MAC3CE,KAAK,EAAE;QAAE1E,KAAK,EAAE,MAAM;QAAEG,MAAM,EAAE,MAAM;QAAEwE,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAQ,CAAE;MAAAH,QAAA,EAE3EpE,QAAQ,CAACqB,GAAG,CAAE0B,GAAG,iBAChB7E,OAAA;QAEEmG,KAAK,EAAE;UACLG,QAAQ,EAAE,UAAU;UACpBC,IAAI,EAAE1B,GAAG,CAAC1E,CAAC;UACXqG,GAAG,EAAE3B,GAAG,CAACE,CAAC;UACVT,QAAQ,EAAE,GAAGO,GAAG,CAACP,QAAQ,IAAI;UAC7BmC,KAAK,EAAE,OAAO;UACd1C,QAAQ,EAAEc,GAAG,CAACpD,KAAK;UACnBiF,SAAS,EAAE,YAAY;UACvBC,aAAa,EAAE,MAAM;UACrBC,UAAU,EAAE,MAAM;UAClBC,UAAU,EAAE,GAAG;UACfC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAE,GAAG;UACfC,UAAU,EAAE;QACd,CAAE;QAAAd,QAAA,EAEDrB,GAAG,CAACR;MAAI,GAjBJQ,GAAG,CAAClC,EAAE;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpH,OAAA;MACEqH,QAAQ,EAAE1B,WAAY;MACtBM,SAAS,EAAC,sEAAsE;MAChFqB,YAAY,EAAC,KAAK;MAClBnB,KAAK,EAAE;QAAEG,QAAQ,EAAE,QAAQ;QAAEiB,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAtB,QAAA,gBAErDlG,OAAA;QACEiG,SAAS,EAAC,sIAAsI;QAChJwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErG,KAAM;QACbsG,QAAQ,EAAG/B,CAAC,IAAKtE,QAAQ,CAACsE,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,iCAAiC;QAC7CC,SAAS;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFpH,OAAA;QACEyH,IAAI,EAAC,QAAQ;QACbxB,SAAS,EAAC,yEAAyE;QAAAC,QAAA,EACpF;MAED;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClG,EAAA,CA1MuBD,GAAG;AAAA8G,EAAA,GAAH9G,GAAG;AAAA,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}