{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [scattered, setScattered] = useState([]); // Scattered messages for the void\n  const [baseOffset, setBaseOffset] = useState(0); // Animation offset\n  const [scrollOffset, setScrollOffset] = useState(0); // User scroll offset\n  const prevWidthRef = useRef(window.innerWidth);\n  const scrollRef = useRef();\n  const animationRef = useRef();\n  const SCATTER_HEIGHT = viewport.height * 10; // Tall scrollable area\n  const SPAWN_COUNT = 40; // Number of times to spawn each message\n  const ANIMATION_SPEED = 60; // px/sec\n  const LOOP_THRESHOLD = 0.05; // 5% from top/bottom\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport(prev => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setScattered(floaters => floaters.map(f => {\n          // Calculate ratio of previous X position\n          const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n          const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n          const newX = ratio * (newWidth - newMsgWidth);\n          return {\n            ...f,\n            x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n            width: newMsgWidth\n          };\n        }));\n        prevWidthRef.current = newWidth;\n        return {\n          width: newWidth,\n          height: window.innerHeight\n        };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Scatter messages in a tall area\n  useEffect(() => {\n    if (!messages.length) return;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const placed = [];\n    let nextId = 0;\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n    for (let spawn = 0; spawn < SPAWN_COUNT; spawn++) {\n      messages.forEach((msg, idx) => {\n        const baseSeed = getSeed(msg.id || \"\" + idx) + spawn * 100000;\n        const fontSize = 1.0 + seededRandom(baseSeed + 2) * (maxFontSize - minFontSize);\n        const width = maxWidth;\n        const height = estimateTextHeight(msg.text, fontSize);\n        const x = seededRandom(baseSeed) * (viewport.width - width);\n        const y = seededRandom(baseSeed + 100) * (SCATTER_HEIGHT - height);\n        placed.push({\n          id: `scattered-${nextId++}`,\n          text: msg.text,\n          x,\n          y,\n          fontSize,\n          width,\n          height\n        });\n      });\n    }\n    setScattered(placed);\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n\n  // Animation: baseOffset increases over time\n  useEffect(() => {\n    let last = Date.now();\n    let running = true;\n    function animate() {\n      if (!running) return;\n      const now = Date.now();\n      const dt = (now - last) / 1000;\n      last = now;\n      setBaseOffset(prev => (prev + ANIMATION_SPEED * dt) % SCATTER_HEIGHT);\n      animationRef.current = requestAnimationFrame(animate);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [SCATTER_HEIGHT]);\n\n  // Scroll: update scrollOffset and loop if near top/bottom\n  useEffect(() => {\n    const el = scrollRef.current;\n    if (!el) return;\n    function handleScroll() {\n      const maxScroll = SCATTER_HEIGHT - viewport.height;\n      const threshold = LOOP_THRESHOLD * maxScroll;\n      if (el.scrollTop < threshold) {\n        // Near top, jump to near bottom\n        el.scrollTop = maxScroll - threshold;\n        setScrollOffset(el.scrollTop);\n      } else if (el.scrollTop > maxScroll - threshold) {\n        // Near bottom, jump to near top\n        el.scrollTop = threshold;\n        setScrollOffset(el.scrollTop);\n      } else {\n        setScrollOffset(el.scrollTop);\n      }\n    }\n    el.addEventListener(\"scroll\", handleScroll);\n    // Start in the middle for a nice effect\n    el.scrollTop = SCATTER_HEIGHT / 2;\n    setScrollOffset(el.scrollTop);\n    return () => el.removeEventListener(\"scroll\", handleScroll);\n  }, [SCATTER_HEIGHT, viewport.height]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  // The effective offset is baseOffset + scrollOffset\n  const effectiveOffset = (baseOffset + scrollOffset) % SCATTER_HEIGHT;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-y-scroll\",\n      ref: scrollRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        background: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: viewport.width,\n          height: SCATTER_HEIGHT,\n          margin: \"0 auto\"\n        },\n        children: scattered.map(msg => {\n          // Loop messages infinitely\n          let y = msg.y - effectiveOffset;\n          if (y < -msg.height) y += SCATTER_HEIGHT;\n          if (y > SCATTER_HEIGHT - msg.height) y -= SCATTER_HEIGHT;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              left: msg.x,\n              top: y,\n              fontSize: `${msg.fontSize}em`,\n              color: \"white\",\n              maxWidth: msg.width,\n              wordBreak: \"break-word\",\n              pointerEvents: \"auto\",\n              userSelect: \"text\",\n              fontWeight: 400,\n              opacity: 0.95,\n              lineHeight: 1.2,\n              transition: \"none\"\n            },\n            children: msg.text\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\",\n      autoComplete: \"off\",\n      style: {\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Send a message into the void...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nkskgc+bNQbKYoIFqGnmRgxVU+E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","seededRandom","seed","x","Math","sin","floor","getSeed","str","hash","i","length","charCodeAt","randomBetween","a","b","random","App","_s","messages","setMessages","input","setInput","viewport","setViewport","width","window","innerWidth","height","innerHeight","scattered","setScattered","baseOffset","setBaseOffset","scrollOffset","setScrollOffset","prevWidthRef","scrollRef","animationRef","SCATTER_HEIGHT","SPAWN_COUNT","ANIMATION_SPEED","LOOP_THRESHOLD","q","unsubscribe","querySnapshot","msgs","forEach","doc","push","id","data","handleResize","prev","newWidth","oldWidth","current","floaters","map","f","ratio","newMsgWidth","min","newX","max","addEventListener","removeEventListener","minFontSize","maxFontSize","maxWidth","placed","nextId","estimateTextHeight","text","fontSize","charsPerLine","lines","ceil","spawn","msg","idx","baseSeed","y","last","Date","now","running","animate","dt","requestAnimationFrame","cancelAnimationFrame","el","handleScroll","maxScroll","threshold","scrollTop","sendMessage","e","preventDefault","trimmed","trim","timestamp","effectiveOffset","className","children","ref","style","minHeight","background","position","margin","left","top","color","wordBreak","pointerEvents","userSelect","fontWeight","opacity","lineHeight","transition","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","bottom","zIndex","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [scattered, setScattered] = useState([]); // Scattered messages for the void\n  const [baseOffset, setBaseOffset] = useState(0); // Animation offset\n  const [scrollOffset, setScrollOffset] = useState(0); // User scroll offset\n  const prevWidthRef = useRef(window.innerWidth);\n  const scrollRef = useRef();\n  const animationRef = useRef();\n  const SCATTER_HEIGHT = viewport.height * 10; // Tall scrollable area\n  const SPAWN_COUNT = 40; // Number of times to spawn each message\n  const ANIMATION_SPEED = 60; // px/sec\n  const LOOP_THRESHOLD = 0.05; // 5% from top/bottom\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push({ id: doc.id, ...doc.data() });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport((prev) => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setScattered((floaters) =>\n          floaters.map((f) => {\n            // Calculate ratio of previous X position\n            const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n            const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n            const newX = ratio * (newWidth - newMsgWidth);\n            return {\n              ...f,\n              x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n              width: newMsgWidth,\n            };\n          })\n        );\n        prevWidthRef.current = newWidth;\n        return { width: newWidth, height: window.innerHeight };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Scatter messages in a tall area\n  useEffect(() => {\n    if (!messages.length) return;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const placed = [];\n    let nextId = 0;\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n    for (let spawn = 0; spawn < SPAWN_COUNT; spawn++) {\n      messages.forEach((msg, idx) => {\n        const baseSeed = getSeed(msg.id || \"\" + idx) + spawn * 100000;\n        const fontSize = 1.0 + seededRandom(baseSeed + 2) * (maxFontSize - minFontSize);\n        const width = maxWidth;\n        const height = estimateTextHeight(msg.text, fontSize);\n        const x = seededRandom(baseSeed) * (viewport.width - width);\n        const y = seededRandom(baseSeed + 100) * (SCATTER_HEIGHT - height);\n        placed.push({\n          id: `scattered-${nextId++}`,\n          text: msg.text,\n          x,\n          y,\n          fontSize,\n          width,\n          height,\n        });\n      });\n    }\n    setScattered(placed);\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n\n  // Animation: baseOffset increases over time\n  useEffect(() => {\n    let last = Date.now();\n    let running = true;\n    function animate() {\n      if (!running) return;\n      const now = Date.now();\n      const dt = (now - last) / 1000;\n      last = now;\n      setBaseOffset((prev) => (prev + ANIMATION_SPEED * dt) % SCATTER_HEIGHT);\n      animationRef.current = requestAnimationFrame(animate);\n    }\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [SCATTER_HEIGHT]);\n\n  // Scroll: update scrollOffset and loop if near top/bottom\n  useEffect(() => {\n    const el = scrollRef.current;\n    if (!el) return;\n    function handleScroll() {\n      const maxScroll = SCATTER_HEIGHT - viewport.height;\n      const threshold = LOOP_THRESHOLD * maxScroll;\n      if (el.scrollTop < threshold) {\n        // Near top, jump to near bottom\n        el.scrollTop = maxScroll - threshold;\n        setScrollOffset(el.scrollTop);\n      } else if (el.scrollTop > maxScroll - threshold) {\n        // Near bottom, jump to near top\n        el.scrollTop = threshold;\n        setScrollOffset(el.scrollTop);\n      } else {\n        setScrollOffset(el.scrollTop);\n      }\n    }\n    el.addEventListener(\"scroll\", handleScroll);\n    // Start in the middle for a nice effect\n    el.scrollTop = SCATTER_HEIGHT / 2;\n    setScrollOffset(el.scrollTop);\n    return () => el.removeEventListener(\"scroll\", handleScroll);\n  }, [SCATTER_HEIGHT, viewport.height]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  // The effective offset is baseOffset + scrollOffset\n  const effectiveOffset = (baseOffset + scrollOffset) % SCATTER_HEIGHT;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-black text-white\">\n      <div\n        className=\"flex-1 relative overflow-y-scroll\"\n        ref={scrollRef}\n        style={{ width: \"100%\", height: \"100%\", minHeight: 0, background: \"black\" }}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            width: viewport.width,\n            height: SCATTER_HEIGHT,\n            margin: \"0 auto\",\n          }}\n        >\n          {scattered.map((msg) => {\n            // Loop messages infinitely\n            let y = msg.y - effectiveOffset;\n            if (y < -msg.height) y += SCATTER_HEIGHT;\n            if (y > SCATTER_HEIGHT - msg.height) y -= SCATTER_HEIGHT;\n            return (\n              <div\n                key={msg.id}\n                style={{\n                  position: \"absolute\",\n                  left: msg.x,\n                  top: y,\n                  fontSize: `${msg.fontSize}em`,\n                  color: \"white\",\n                  maxWidth: msg.width,\n                  wordBreak: \"break-word\",\n                  pointerEvents: \"auto\",\n                  userSelect: \"text\",\n                  fontWeight: 400,\n                  opacity: 0.95,\n                  lineHeight: 1.2,\n                  transition: \"none\",\n                }}\n              >\n                {msg.text}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <form\n        onSubmit={sendMessage}\n        className=\"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\"\n        autoComplete=\"off\"\n        style={{ position: \"sticky\", bottom: 0, zIndex: 10 }}\n      >\n        <input\n          className=\"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Send a message into the void...\"\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          className=\"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}