{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  onSend,\n  loading\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const inputRef = useRef(null);\n  const handleSend = async () => {\n    if (!message.trim() || message.length > 500) return;\n    await onSend(message.trim());\n    setMessage('');\n    // inputRef.current?.focus(); // We'll move focus logic to useEffect\n  };\n\n  // Refocus input when message is cleared\n  useEffect(() => {\n    if (message === '' && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed left-1/2 bottom-8 transform -translate-x-1/2 flex flex-col items-center\",\n    style: {\n      width: '25vw',\n      minWidth: 220,\n      maxWidth: 400,\n      zIndex: 10\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black rounded-lg border border-white flex items-center px-2 py-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        className: \"flex-1 bg-black text-white border-none outline-none text-base placeholder-gray-500 px-2 py-2\",\n        type: \"text\",\n        maxLength: 500,\n        placeholder: \"Speak into The Void...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        \"aria-label\": \"Type your message to send to The Void\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') handleSend();\n        },\n        disabled: loading,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-2 text-white text-base font-bold px-3 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\",\n        onClick: handleSend,\n        disabled: loading || !message.trim() || message.length > 500,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// Deterministic pseudo-random for consistent placement\n_s(MessageInput, \"WHWdSxrJP5+67PoqSh0DpipZuFs=\");\n_c = MessageInput;\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\n// Normal-like distribution centered at 0\nfunction normalRandom(seed) {\n  // Box-Muller transform with two seeds\n  const u1 = seededRandom(seed);\n  const u2 = seededRandom(seed + 1000);\n  return Math.sqrt(-2.0 * Math.log(u1 + 0.0001)) * Math.cos(2.0 * Math.PI * u2) / 2; // ~-1 to 1, mostly near 0\n}\n\n// Fisher-Yates shuffle with seed\nfunction seededShuffle(array, seed) {\n  const arr = array.slice();\n  let m = arr.length,\n    t,\n    i;\n  let s = seed;\n  while (m) {\n    s = (s * 9301 + 49297) % 233280;\n    i = Math.floor(s / 233280 * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n// Animation frame hook\nfunction useAnimationFrame() {\n  _s2();\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let frame;\n    let start = performance.now();\n    const animate = () => {\n      setTime(performance.now() - start);\n      frame = requestAnimationFrame(animate);\n    };\n    frame = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(frame);\n  }, []);\n  return time;\n}\n_s2(useAnimationFrame, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\nfunction MessageList({\n  messages,\n  userScroll,\n  viewport,\n  time,\n  depth,\n  floatingMessages\n}) {\n  // Show up to 10 visible messages at a time, sorted by z, with overlap prevention\n  const getVisibleMessages = () => {\n    if (!messages || messages.length === 0) return [];\n    const visible = [];\n    const placed = [];\n    const scrollZ = userScroll / 1000;\n\n    // Always render the first 10 messages at their z positions\n    for (let i = 0; i < Math.min(10, floatingMessages.length); i++) {\n      const msg = floatingMessages[i];\n      const perspective = 900;\n      const animX = msg.ampX * Math.sin(time * msg.freqX + msg.phaseX);\n      const animY = msg.ampY * Math.cos(time * msg.freqY + msg.phaseY);\n      const z = msg.randZ * depth - scrollZ;\n      const scale = Math.min(8, Math.max(0.2, perspective / (z * 1000)));\n      const centerX = viewport.width / 2;\n      const centerY = viewport.height / 2;\n      const x = centerX + (msg.randX + animX) * centerX * 0.8 * scale;\n      const y = centerY + (msg.randY + animY) * centerY * 0.8 * scale + z * 400;\n      let opacity = Math.max(0.1, Math.min(1, 1.2 - z));\n      let blur = 0;\n      if (z < 0.12) {\n        opacity = Math.max(0, (z - 0.01) / 0.11);\n        blur = 16 * (1 - opacity) + 2;\n      } else {\n        blur = Math.max(0, (z - 0.2) * 6);\n      }\n      visible.push({\n        id: msg.id,\n        text: msg.text,\n        style: {\n          position: 'absolute',\n          left: x,\n          top: y + scrollZ * 1000,\n          transform: `translate(-50%, -50%) scale(${scale})`,\n          opacity,\n          color: 'white',\n          fontWeight: 300,\n          fontSize: '2rem',\n          pointerEvents: 'none',\n          whiteSpace: 'pre-line',\n          textAlign: 'center',\n          filter: `blur(${blur}px)`\n        }\n      });\n    }\n\n    // Optionally, add the rest of your previous logic for more messages...\n\n    return visible;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      height: '100vh',\n      width: '100vw'\n    },\n    children: getVisibleMessages().map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: msg.style,\n      children: msg.text\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MessageList;\nexport default function App() {\n  _s3();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const containerRef = React.useRef(null);\n  const [userScroll, setUserScroll] = useState(0);\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const time = useAnimationFrame();\n\n  // (3) Log messages at the top of App\n  console.log('Rendering messages:', messages);\n\n  // Assign random (x, y, z) and animation params to each message, memoized by message id\n  const floatingMessages = useMemo(() => {\n    return messages.map((msg, idx) => {\n      const seed = msg.id.split('').reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\n      // Cluster X/Y toward center using normal distribution\n      const randX = normalRandom(seed) * 0.5; // -0.5 to 0.5, mostly near 0\n      const randY = normalRandom(seed + 1) * 0.5;\n      // Place the first 10 messages right in front of the camera\n      const randZ = idx < 10 ? 0.2 + idx * 0.1 // 0.2, 0.3, ..., 1.1 for the first 10 messages\n      : 0.2 + seededRandom(seed + 2) * 0.8; // random for the rest\n      // Animation: random amplitude, frequency, phase\n      const ampX = 0.05 + seededRandom(seed + 3) * 0.08; // 0.05-0.13\n      const ampY = 0.05 + seededRandom(seed + 4) * 0.08;\n      const freqX = 0.0002 + seededRandom(seed + 5) * 0.0003; // 0.0002-0.0005\n      const freqY = 0.0002 + seededRandom(seed + 6) * 0.0003;\n      const phaseX = seededRandom(seed + 7) * Math.PI * 2;\n      const phaseY = seededRandom(seed + 8) * Math.PI * 2;\n      return {\n        ...msg,\n        randX,\n        randY,\n        randZ,\n        ampX,\n        ampY,\n        freqX,\n        freqY,\n        phaseX,\n        phaseY\n      };\n    });\n  }, [messages]);\n\n  // The total \"depth\" of the void\n  const depth = Math.max(floatingMessages.length * 0.25 + 1, 2);\n  // The total height of the scrollable area\n  const totalHeight = depth * 1000 + viewport.height;\n\n  // Set initial scroll to the start of the void\n  useEffect(() => {\n    const initialScroll = 0;\n    if (containerRef.current) {\n      containerRef.current.scrollTop = initialScroll;\n      setUserScroll(initialScroll);\n    }\n  }, [depth]);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // User scroll handler (speed control)\n  const handleScroll = e => {\n    setUserScroll(e.target.scrollTop);\n  };\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const messageData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      // (2) Log loaded messages in useEffect\n      console.log('Loaded messages:', messageData);\n      setMessages(messageData);\n    }, error => {\n      console.error('Error fetching messages:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSend = async text => {\n    setLoading(true);\n    try {\n      await import('firebase/firestore').then(({\n        collection,\n        addDoc,\n        serverTimestamp\n      }) => addDoc(collection(db, 'messages'), {\n        text,\n        timestamp: serverTimestamp()\n      }));\n    } catch (e) {\n      alert('Failed to send message. Please try again.');\n      console.error('Error adding message:', e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // (4) Temporarily render messages as a simple list for debugging\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'white',\n      background: 'black',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: 600\n      },\n      children: messages.slice(0, 10).map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#222',\n          borderRadius: 12,\n          padding: 16,\n          margin: '16px 0',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          opacity: 0.95\n        },\n        children: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: handleSend,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"JWH6hk7sEWlMGyuP4klL7jFNs+8=\", false, function () {\n  return [useAnimationFrame];\n});\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageInput\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","collection","onSnapshot","orderBy","query","db","jsxDEV","_jsxDEV","MessageInput","onSend","loading","_s","message","setMessage","inputRef","handleSend","trim","length","current","focus","className","style","width","minWidth","maxWidth","zIndex","children","ref","type","maxLength","placeholder","value","onChange","e","target","onKeyDown","key","disabled","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","seededRandom","seed","x","Math","sin","floor","normalRandom","u1","u2","sqrt","log","cos","PI","seededShuffle","array","arr","slice","m","t","i","s","useAnimationFrame","_s2","time","setTime","frame","start","performance","now","animate","requestAnimationFrame","cancelAnimationFrame","MessageList","messages","userScroll","viewport","depth","floatingMessages","getVisibleMessages","visible","placed","scrollZ","min","msg","perspective","animX","ampX","freqX","phaseX","animY","ampY","freqY","phaseY","z","randZ","scale","max","centerX","centerY","height","randX","y","randY","opacity","blur","push","id","text","position","left","top","transform","color","fontWeight","fontSize","pointerEvents","whiteSpace","textAlign","filter","map","_c2","App","_s3","setMessages","setLoading","containerRef","setUserScroll","setViewport","window","innerWidth","innerHeight","console","idx","split","reduce","acc","c","charCodeAt","totalHeight","initialScroll","scrollTop","handleResize","addEventListener","removeEventListener","handleScroll","q","unsubscribe","snapshot","messageData","docs","doc","data","error","then","addDoc","serverTimestamp","timestamp","alert","background","minHeight","display","flexDirection","alignItems","justifyContent","borderRadius","padding","margin","_c3","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nfunction MessageInput({ onSend, loading }) {\r\n  const [message, setMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim() || message.length > 500) return;\r\n    await onSend(message.trim());\r\n    setMessage('');\r\n    // inputRef.current?.focus(); // We'll move focus logic to useEffect\r\n  };\r\n\r\n  // Refocus input when message is cleared\r\n  useEffect(() => {\r\n    if (message === '' && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed left-1/2 bottom-8 transform -translate-x-1/2 flex flex-col items-center\"\r\n      style={{ width: '25vw', minWidth: 220, maxWidth: 400, zIndex: 10 }}\r\n    >\r\n      <div className=\"w-full bg-black rounded-lg border border-white flex items-center px-2 py-2\">\r\n        <input\r\n          ref={inputRef}\r\n          className=\"flex-1 bg-black text-white border-none outline-none text-base placeholder-gray-500 px-2 py-2\"\r\n          type=\"text\"\r\n          maxLength={500}\r\n          placeholder=\"Speak into The Void...\"\r\n          value={message}\r\n          onChange={e => setMessage(e.target.value)}\r\n          aria-label=\"Type your message to send to The Void\"\r\n          onKeyDown={e => { if (e.key === 'Enter') handleSend(); }}\r\n          disabled={loading}\r\n          autoFocus\r\n        />\r\n        <button\r\n          className=\"ml-2 text-white text-base font-bold px-3 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\"\r\n          onClick={handleSend}\r\n          disabled={loading || !message.trim() || message.length > 500}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Deterministic pseudo-random for consistent placement\r\nfunction seededRandom(seed) {\r\n  let x = Math.sin(seed) * 10000;\r\n  return x - Math.floor(x);\r\n}\r\n\r\n// Normal-like distribution centered at 0\r\nfunction normalRandom(seed) {\r\n  // Box-Muller transform with two seeds\r\n  const u1 = seededRandom(seed);\r\n  const u2 = seededRandom(seed + 1000);\r\n  return Math.sqrt(-2.0 * Math.log(u1 + 0.0001)) * Math.cos(2.0 * Math.PI * u2) / 2; // ~-1 to 1, mostly near 0\r\n}\r\n\r\n// Fisher-Yates shuffle with seed\r\nfunction seededShuffle(array, seed) {\r\n  const arr = array.slice();\r\n  let m = arr.length, t, i;\r\n  let s = seed;\r\n  while (m) {\r\n    s = (s * 9301 + 49297) % 233280;\r\n    i = Math.floor((s / 233280) * m--);\r\n    t = arr[m];\r\n    arr[m] = arr[i];\r\n    arr[i] = t;\r\n  }\r\n  return arr;\r\n}\r\n\r\n// Animation frame hook\r\nfunction useAnimationFrame() {\r\n  const [time, setTime] = useState(0);\r\n  useEffect(() => {\r\n    let frame;\r\n    let start = performance.now();\r\n    const animate = () => {\r\n      setTime(performance.now() - start);\r\n      frame = requestAnimationFrame(animate);\r\n    };\r\n    frame = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n  return time;\r\n}\r\n\r\nfunction MessageList({ messages, userScroll, viewport, time, depth, floatingMessages }) {\r\n  // Show up to 10 visible messages at a time, sorted by z, with overlap prevention\r\n  const getVisibleMessages = () => {\r\n    if (!messages || messages.length === 0) return [];\r\n    const visible = [];\r\n    const placed = [];\r\n    const scrollZ = userScroll / 1000;\r\n\r\n    // Always render the first 10 messages at their z positions\r\n    for (let i = 0; i < Math.min(10, floatingMessages.length); i++) {\r\n      const msg = floatingMessages[i];\r\n      const perspective = 900;\r\n      const animX = msg.ampX * Math.sin(time * msg.freqX + msg.phaseX);\r\n      const animY = msg.ampY * Math.cos(time * msg.freqY + msg.phaseY);\r\n      const z = msg.randZ * depth - scrollZ;\r\n      const scale = Math.min(8, Math.max(0.2, perspective / (z * 1000)));\r\n      const centerX = viewport.width / 2;\r\n      const centerY = viewport.height / 2;\r\n      const x = centerX + (msg.randX + animX) * centerX * 0.8 * scale;\r\n      const y = centerY + (msg.randY + animY) * centerY * 0.8 * scale + z * 400;\r\n      let opacity = Math.max(0.1, Math.min(1, 1.2 - z));\r\n      let blur = 0;\r\n      if (z < 0.12) {\r\n        opacity = Math.max(0, (z - 0.01) / 0.11);\r\n        blur = 16 * (1 - opacity) + 2;\r\n      } else {\r\n        blur = Math.max(0, (z - 0.2) * 6);\r\n      }\r\n      visible.push({\r\n        id: msg.id,\r\n        text: msg.text,\r\n        style: {\r\n          position: 'absolute',\r\n          left: x,\r\n          top: y + scrollZ * 1000,\r\n          transform: `translate(-50%, -50%) scale(${scale})`,\r\n          opacity,\r\n          color: 'white',\r\n          fontWeight: 300,\r\n          fontSize: '2rem',\r\n          pointerEvents: 'none',\r\n          whiteSpace: 'pre-line',\r\n          textAlign: 'center',\r\n          filter: `blur(${blur}px)`\r\n        }\r\n      });\r\n    }\r\n\r\n    // Optionally, add the rest of your previous logic for more messages...\r\n\r\n    return visible;\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', height: '100vh', width: '100vw' }}>\r\n      {getVisibleMessages().map(msg => (\r\n        <div key={msg.id} style={msg.style}>\r\n          {msg.text}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const containerRef = React.useRef(null);\r\n  const [userScroll, setUserScroll] = useState(0);\r\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\r\n  const time = useAnimationFrame();\r\n\r\n  // (3) Log messages at the top of App\r\n  console.log('Rendering messages:', messages);\r\n\r\n  // Assign random (x, y, z) and animation params to each message, memoized by message id\r\n  const floatingMessages = useMemo(() => {\r\n    return messages.map((msg, idx) => {\r\n      const seed = msg.id.split('').reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\r\n      // Cluster X/Y toward center using normal distribution\r\n      const randX = normalRandom(seed) * 0.5; // -0.5 to 0.5, mostly near 0\r\n      const randY = normalRandom(seed + 1) * 0.5;\r\n      // Place the first 10 messages right in front of the camera\r\n      const randZ = idx < 10\r\n        ? 0.2 + idx * 0.1 // 0.2, 0.3, ..., 1.1 for the first 10 messages\r\n        : 0.2 + seededRandom(seed + 2) * 0.8; // random for the rest\r\n      // Animation: random amplitude, frequency, phase\r\n      const ampX = 0.05 + seededRandom(seed + 3) * 0.08; // 0.05-0.13\r\n      const ampY = 0.05 + seededRandom(seed + 4) * 0.08;\r\n      const freqX = 0.0002 + seededRandom(seed + 5) * 0.0003; // 0.0002-0.0005\r\n      const freqY = 0.0002 + seededRandom(seed + 6) * 0.0003;\r\n      const phaseX = seededRandom(seed + 7) * Math.PI * 2;\r\n      const phaseY = seededRandom(seed + 8) * Math.PI * 2;\r\n      return {\r\n        ...msg,\r\n        randX,\r\n        randY,\r\n        randZ,\r\n        ampX,\r\n        ampY,\r\n        freqX,\r\n        freqY,\r\n        phaseX,\r\n        phaseY,\r\n      };\r\n    });\r\n  }, [messages]);\r\n\r\n  // The total \"depth\" of the void\r\n  const depth = Math.max(floatingMessages.length * 0.25 + 1, 2);\r\n  // The total height of the scrollable area\r\n  const totalHeight = depth * 1000 + viewport.height;\r\n\r\n  // Set initial scroll to the start of the void\r\n  useEffect(() => {\r\n    const initialScroll = 0;\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollTop = initialScroll;\r\n      setUserScroll(initialScroll);\r\n    }\r\n  }, [depth]);\r\n\r\n  // Update viewport size on resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setViewport({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // User scroll handler (speed control)\r\n  const handleScroll = (e) => {\r\n    setUserScroll(e.target.scrollTop);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const messageData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      // (2) Log loaded messages in useEffect\r\n      console.log('Loaded messages:', messageData);\r\n      setMessages(messageData);\r\n    }, (error) => {\r\n      console.error('Error fetching messages:', error);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSend = async (text) => {\r\n    setLoading(true);\r\n    try {\r\n      await import('firebase/firestore').then(({ collection, addDoc, serverTimestamp }) =>\r\n        addDoc(collection(db, 'messages'), {\r\n          text,\r\n          timestamp: serverTimestamp(),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      alert('Failed to send message. Please try again.');\r\n      console.error('Error adding message:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // (4) Temporarily render messages as a simple list for debugging\r\n  return (\r\n    <div style={{\r\n      color: 'white',\r\n      background: 'black',\r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }}>\r\n      <div style={{ width: '100%', maxWidth: 600 }}>\r\n        {messages.slice(0, 10).map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            style={{\r\n              background: '#222',\r\n              borderRadius: 12,\r\n              padding: 16,\r\n              margin: '16px 0',\r\n              textAlign: 'center',\r\n              fontSize: '1.5rem',\r\n              opacity: 0.95,\r\n            }}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <MessageInput onSend={handleSend} loading={loading} />\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}