{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  onSend,\n  loading\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const inputRef = useRef(null);\n  const handleSend = async () => {\n    if (!message.trim() || message.length > 500) return;\n    await onSend(message.trim());\n    setMessage('');\n    // inputRef.current?.focus(); // We'll move focus logic to useEffect\n  };\n\n  // Refocus input when message is cleared\n  useEffect(() => {\n    if (message === '' && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed left-1/2 bottom-8 transform -translate-x-1/2 flex flex-col items-center\",\n    style: {\n      width: '25vw',\n      minWidth: 220,\n      maxWidth: 400,\n      zIndex: 10\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black rounded-lg border border-white flex items-center px-2 py-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        className: \"flex-1 bg-black text-white border-none outline-none text-base placeholder-gray-500 px-2 py-2\",\n        type: \"text\",\n        maxLength: 500,\n        placeholder: \"Speak into The Void...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        \"aria-label\": \"Type your message to send to The Void\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') handleSend();\n        },\n        disabled: loading,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-2 text-white text-base font-bold px-3 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\",\n        onClick: handleSend,\n        disabled: loading || !message.trim() || message.length > 500,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// Deterministic pseudo-random for consistent placement\n_s(MessageInput, \"WHWdSxrJP5+67PoqSh0DpipZuFs=\");\n_c = MessageInput;\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\n// Normal-like distribution centered at 0\nfunction normalRandom(seed) {\n  // Box-Muller transform with two seeds\n  const u1 = seededRandom(seed);\n  const u2 = seededRandom(seed + 1000);\n  return Math.sqrt(-2.0 * Math.log(u1 + 0.0001)) * Math.cos(2.0 * Math.PI * u2) / 2; // ~-1 to 1, mostly near 0\n}\n\n// Animation frame hook\nfunction useAnimationFrame() {\n  _s2();\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let frame;\n    let start = performance.now();\n    const animate = () => {\n      setTime(performance.now() - start);\n      frame = requestAnimationFrame(animate);\n    };\n    frame = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(frame);\n  }, []);\n  return time;\n}\n_s2(useAnimationFrame, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\nfunction MessageList({\n  messages\n}) {\n  _s3();\n  const containerRef = useRef(null);\n  const [userScroll, setUserScroll] = useState(0); // user's scroll offset\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const time = useAnimationFrame();\n\n  // Assign random (x, y, z) and animation params to each message, memoized by message id\n  const floatingMessages = useMemo(() => {\n    return messages.map((msg, idx) => {\n      const seed = msg.id.split('').reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\n      // Cluster X/Y toward center using normal distribution\n      const randX = normalRandom(seed) * 0.5; // -0.5 to 0.5, mostly near 0\n      const randY = normalRandom(seed + 1) * 0.5;\n      const randZ = 0.2 + seededRandom(seed + 2) * 0.8; // 0.2 to 1.0\n      // Animation: random amplitude, frequency, phase\n      const ampX = 0.05 + seededRandom(seed + 3) * 0.08; // 0.05-0.13\n      const ampY = 0.05 + seededRandom(seed + 4) * 0.08;\n      const freqX = 0.0002 + seededRandom(seed + 5) * 0.0003; // 0.0002-0.0005\n      const freqY = 0.0002 + seededRandom(seed + 6) * 0.0003;\n      const phaseX = seededRandom(seed + 7) * Math.PI * 2;\n      const phaseY = seededRandom(seed + 8) * Math.PI * 2;\n      return {\n        ...msg,\n        randX,\n        randY,\n        randZ,\n        ampX,\n        ampY,\n        freqX,\n        freqY,\n        phaseX,\n        phaseY\n      };\n    });\n  }, [messages]);\n\n  // The total \"depth\" of the void\n  const depth = Math.max(floatingMessages.length * 0.25 + 1, 2);\n  // The total height of the scrollable area\n  const totalHeight = depth * 1000 + viewport.height;\n\n  // Set initial scroll to center of the void\n  useEffect(() => {\n    const initialScroll = depth * 1000 / 2;\n    if (containerRef.current) {\n      containerRef.current.scrollTop = initialScroll;\n      setUserScroll(initialScroll);\n    }\n  }, [depth]);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // User scroll handler (speed control)\n  const handleScroll = e => {\n    setUserScroll(e.target.scrollTop);\n  };\n\n  // Only move when user scrolls\n  const scrollZ = userScroll / 1000;\n\n  // Perspective projection for each message with strong first-person effect and looping\n  const getMessageStyle = msg => {\n    let z = msg.randZ * depth - scrollZ;\n    if (z < 0.01) return {\n      display: 'none'\n    };\n    const perspective = 900; // px\n    // Animate X/Y with smooth oscillation\n    const animX = msg.ampX * Math.sin(time * msg.freqX + msg.phaseX);\n    const animY = msg.ampY * Math.cos(time * msg.freqY + msg.phaseY);\n    // Dramatic scale: as z approaches 0, scale increases rapidly\n    const scale = Math.min(8, Math.max(0.2, perspective / (z * 1000)));\n    const centerX = viewport.width / 2;\n    const centerY = viewport.height / 2;\n    const x = centerX + (msg.randX + animX) * centerX * 0.8 * scale;\n    const y = centerY + (msg.randY + animY) * centerY * 0.8 * scale + z * 400;\n    // Opacity and blur based on depth\n    let opacity = Math.max(0, Math.min(1, 1.2 - z));\n    let blur = 0;\n    // As z approaches 0.05, fade out and blur heavily\n    if (z < 0.12) {\n      opacity = Math.max(0, (z - 0.01) / 0.11); // fade out as it passes camera\n      blur = 16 * (1 - opacity) + 2;\n    } else {\n      blur = Math.max(0, (z - 0.2) * 6);\n    }\n    return {\n      position: 'absolute',\n      left: x,\n      top: y + scrollZ * 1000,\n      // keep messages in the scrollable area\n      transform: `translate(-50%, -50%) scale(${scale})`,\n      opacity,\n      color: 'white',\n      fontWeight: 300,\n      fontSize: '2rem',\n      pointerEvents: 'none',\n      whiteSpace: 'pre-line',\n      textAlign: 'center',\n      filter: `blur(${blur}px)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"relative w-full h-full overflow-y-scroll bg-black\",\n    style: {\n      height: '100vh',\n      paddingBottom: 100\n    },\n    tabIndex: 0,\n    onScroll: handleScroll,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: totalHeight\n      },\n      children: [floatingMessages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '40%',\n          left: '50%',\n          transform: 'translate(-50%, 0)',\n          color: '#fff',\n          opacity: 0.3,\n          fontSize: '2rem',\n          textAlign: 'center'\n        },\n        children: \"The Void is silent... for now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), floatingMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: getMessageStyle(msg),\n        children: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s3(MessageList, \"3GsbieBg/cJQ250w25iYvbiytjE=\", false, function () {\n  return [useAnimationFrame];\n});\n_c2 = MessageList;\nexport default function App() {\n  _s4();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const messageData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(messageData);\n    }, error => {\n      console.error('Error fetching messages:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSend = async text => {\n    setLoading(true);\n    try {\n      await import('firebase/firestore').then(({\n        collection,\n        addDoc,\n        serverTimestamp\n      }) => addDoc(collection(db, 'messages'), {\n        text,\n        timestamp: serverTimestamp()\n      }));\n    } catch (e) {\n      alert('Failed to send message. Please try again.');\n      console.error('Error adding message:', e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black w-full h-screen min-h-screen overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: handleSend,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s4(App, \"OWiw6xYK6UqySRWWjzGN6db1MoE=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageInput\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","collection","onSnapshot","orderBy","query","db","jsxDEV","_jsxDEV","MessageInput","onSend","loading","_s","message","setMessage","inputRef","handleSend","trim","length","current","focus","className","style","width","minWidth","maxWidth","zIndex","children","ref","type","maxLength","placeholder","value","onChange","e","target","onKeyDown","key","disabled","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","seededRandom","seed","x","Math","sin","floor","normalRandom","u1","u2","sqrt","log","cos","PI","useAnimationFrame","_s2","time","setTime","frame","start","performance","now","animate","requestAnimationFrame","cancelAnimationFrame","MessageList","messages","_s3","containerRef","userScroll","setUserScroll","viewport","setViewport","window","innerWidth","height","innerHeight","floatingMessages","map","msg","idx","id","split","reduce","acc","c","charCodeAt","randX","randY","randZ","ampX","ampY","freqX","freqY","phaseX","phaseY","depth","max","totalHeight","initialScroll","scrollTop","handleResize","addEventListener","removeEventListener","handleScroll","scrollZ","getMessageStyle","z","display","perspective","animX","animY","scale","min","centerX","centerY","y","opacity","blur","position","left","top","transform","color","fontWeight","fontSize","pointerEvents","whiteSpace","textAlign","filter","paddingBottom","tabIndex","onScroll","text","_c2","App","_s4","setMessages","setLoading","q","unsubscribe","snapshot","messageData","docs","doc","data","error","console","then","addDoc","serverTimestamp","timestamp","alert","_c3","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nfunction MessageInput({ onSend, loading }) {\r\n  const [message, setMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim() || message.length > 500) return;\r\n    await onSend(message.trim());\r\n    setMessage('');\r\n    // inputRef.current?.focus(); // We'll move focus logic to useEffect\r\n  };\r\n\r\n  // Refocus input when message is cleared\r\n  useEffect(() => {\r\n    if (message === '' && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed left-1/2 bottom-8 transform -translate-x-1/2 flex flex-col items-center\"\r\n      style={{ width: '25vw', minWidth: 220, maxWidth: 400, zIndex: 10 }}\r\n    >\r\n      <div className=\"w-full bg-black rounded-lg border border-white flex items-center px-2 py-2\">\r\n        <input\r\n          ref={inputRef}\r\n          className=\"flex-1 bg-black text-white border-none outline-none text-base placeholder-gray-500 px-2 py-2\"\r\n          type=\"text\"\r\n          maxLength={500}\r\n          placeholder=\"Speak into The Void...\"\r\n          value={message}\r\n          onChange={e => setMessage(e.target.value)}\r\n          aria-label=\"Type your message to send to The Void\"\r\n          onKeyDown={e => { if (e.key === 'Enter') handleSend(); }}\r\n          disabled={loading}\r\n          autoFocus\r\n        />\r\n        <button\r\n          className=\"ml-2 text-white text-base font-bold px-3 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\"\r\n          onClick={handleSend}\r\n          disabled={loading || !message.trim() || message.length > 500}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Deterministic pseudo-random for consistent placement\r\nfunction seededRandom(seed) {\r\n  let x = Math.sin(seed) * 10000;\r\n  return x - Math.floor(x);\r\n}\r\n\r\n// Normal-like distribution centered at 0\r\nfunction normalRandom(seed) {\r\n  // Box-Muller transform with two seeds\r\n  const u1 = seededRandom(seed);\r\n  const u2 = seededRandom(seed + 1000);\r\n  return Math.sqrt(-2.0 * Math.log(u1 + 0.0001)) * Math.cos(2.0 * Math.PI * u2) / 2; // ~-1 to 1, mostly near 0\r\n}\r\n\r\n// Animation frame hook\r\nfunction useAnimationFrame() {\r\n  const [time, setTime] = useState(0);\r\n  useEffect(() => {\r\n    let frame;\r\n    let start = performance.now();\r\n    const animate = () => {\r\n      setTime(performance.now() - start);\r\n      frame = requestAnimationFrame(animate);\r\n    };\r\n    frame = requestAnimationFrame(animate);\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n  return time;\r\n}\r\n\r\nfunction MessageList({ messages }) {\r\n  const containerRef = useRef(null);\r\n  const [userScroll, setUserScroll] = useState(0); // user's scroll offset\r\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\r\n  const time = useAnimationFrame();\r\n\r\n  // Assign random (x, y, z) and animation params to each message, memoized by message id\r\n  const floatingMessages = useMemo(() => {\r\n    return messages.map((msg, idx) => {\r\n      const seed = msg.id.split('').reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\r\n      // Cluster X/Y toward center using normal distribution\r\n      const randX = normalRandom(seed) * 0.5; // -0.5 to 0.5, mostly near 0\r\n      const randY = normalRandom(seed + 1) * 0.5;\r\n      const randZ = 0.2 + seededRandom(seed + 2) * 0.8; // 0.2 to 1.0\r\n      // Animation: random amplitude, frequency, phase\r\n      const ampX = 0.05 + seededRandom(seed + 3) * 0.08; // 0.05-0.13\r\n      const ampY = 0.05 + seededRandom(seed + 4) * 0.08;\r\n      const freqX = 0.0002 + seededRandom(seed + 5) * 0.0003; // 0.0002-0.0005\r\n      const freqY = 0.0002 + seededRandom(seed + 6) * 0.0003;\r\n      const phaseX = seededRandom(seed + 7) * Math.PI * 2;\r\n      const phaseY = seededRandom(seed + 8) * Math.PI * 2;\r\n      return {\r\n        ...msg,\r\n        randX,\r\n        randY,\r\n        randZ,\r\n        ampX,\r\n        ampY,\r\n        freqX,\r\n        freqY,\r\n        phaseX,\r\n        phaseY,\r\n      };\r\n    });\r\n  }, [messages]);\r\n\r\n  // The total \"depth\" of the void\r\n  const depth = Math.max(floatingMessages.length * 0.25 + 1, 2);\r\n  // The total height of the scrollable area\r\n  const totalHeight = depth * 1000 + viewport.height;\r\n\r\n  // Set initial scroll to center of the void\r\n  useEffect(() => {\r\n    const initialScroll = (depth * 1000) / 2;\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollTop = initialScroll;\r\n      setUserScroll(initialScroll);\r\n    }\r\n  }, [depth]);\r\n\r\n  // Update viewport size on resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setViewport({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // User scroll handler (speed control)\r\n  const handleScroll = (e) => {\r\n    setUserScroll(e.target.scrollTop);\r\n  };\r\n\r\n  // Only move when user scrolls\r\n  const scrollZ = userScroll / 1000;\r\n\r\n  // Perspective projection for each message with strong first-person effect and looping\r\n  const getMessageStyle = (msg) => {\r\n    let z = msg.randZ * depth - scrollZ;\r\n    if (z < 0.01) return { display: 'none' };\r\n    const perspective = 900; // px\r\n    // Animate X/Y with smooth oscillation\r\n    const animX = msg.ampX * Math.sin(time * msg.freqX + msg.phaseX);\r\n    const animY = msg.ampY * Math.cos(time * msg.freqY + msg.phaseY);\r\n    // Dramatic scale: as z approaches 0, scale increases rapidly\r\n    const scale = Math.min(8, Math.max(0.2, perspective / (z * 1000)));\r\n    const centerX = viewport.width / 2;\r\n    const centerY = viewport.height / 2;\r\n    const x = centerX + (msg.randX + animX) * centerX * 0.8 * scale;\r\n    const y = centerY + (msg.randY + animY) * centerY * 0.8 * scale + z * 400;\r\n    // Opacity and blur based on depth\r\n    let opacity = Math.max(0, Math.min(1, 1.2 - z));\r\n    let blur = 0;\r\n    // As z approaches 0.05, fade out and blur heavily\r\n    if (z < 0.12) {\r\n      opacity = Math.max(0, (z - 0.01) / 0.11); // fade out as it passes camera\r\n      blur = 16 * (1 - opacity) + 2;\r\n    } else {\r\n      blur = Math.max(0, (z - 0.2) * 6);\r\n    }\r\n    return {\r\n      position: 'absolute',\r\n      left: x,\r\n      top: y + scrollZ * 1000, // keep messages in the scrollable area\r\n      transform: `translate(-50%, -50%) scale(${scale})`,\r\n      opacity,\r\n      color: 'white',\r\n      fontWeight: 300,\r\n      fontSize: '2rem',\r\n      pointerEvents: 'none',\r\n      whiteSpace: 'pre-line',\r\n      textAlign: 'center',\r\n      filter: `blur(${blur}px)`\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"relative w-full h-full overflow-y-scroll bg-black\"\r\n      style={{ height: '100vh', paddingBottom: 100 }}\r\n      tabIndex={0}\r\n      onScroll={handleScroll}\r\n    >\r\n      <div style={{ position: 'relative', height: totalHeight }}>\r\n        {floatingMessages.length === 0 && (\r\n          <div style={{ position: 'absolute', top: '40%', left: '50%', transform: 'translate(-50%, 0)', color: '#fff', opacity: 0.3, fontSize: '2rem', textAlign: 'center' }}>\r\n            The Void is silent... for now.\r\n          </div>\r\n        )}\r\n        {floatingMessages.map((msg) => (\r\n          <div key={msg.id} style={getMessageStyle(msg)}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const messageData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setMessages(messageData);\r\n    }, (error) => {\r\n      console.error('Error fetching messages:', error);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSend = async (text) => {\r\n    setLoading(true);\r\n    try {\r\n      await import('firebase/firestore').then(({ collection, addDoc, serverTimestamp }) =>\r\n        addDoc(collection(db, 'messages'), {\r\n          text,\r\n          timestamp: serverTimestamp(),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      alert('Failed to send message. Please try again.');\r\n      console.error('Error adding message:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black w-full h-screen min-h-screen overflow-hidden\">\r\n      <MessageList messages={messages} />\r\n      <MessageInput onSend={handleSend} loading={loading} />\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}