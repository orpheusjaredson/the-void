{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  onSend,\n  loading\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const inputRef = useRef(null);\n  const handleSend = async () => {\n    var _inputRef$current;\n    if (!message.trim() || message.length > 500) return;\n    await onSend(message.trim());\n    setMessage('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-0 left-0 w-full bg-black flex items-center px-4 py-3\",\n    style: {\n      zIndex: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: \"flex-1 bg-black text-white border-none outline-none text-lg placeholder-gray-500 px-2 py-3\",\n      type: \"text\",\n      maxLength: 500,\n      placeholder: \"Speak into The Void...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      \"aria-label\": \"Type your message to send to The Void\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') handleSend();\n      },\n      disabled: loading,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ml-2 text-white text-lg font-bold px-4 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\",\n      onClick: handleSend,\n      disabled: loading || !message.trim() || message.length > 500,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageInput, \"kpqrElHgiaQLE+KyGMfKvEmAPes=\");\n_c = MessageInput;\nfunction getRandomFloat(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction MessageList({\n  messages\n}) {\n  _s2();\n  const containerRef = useRef(null);\n  const [scroll, setScroll] = useState(0);\n  const [viewportHeight, setViewportHeight] = useState(window.innerHeight);\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\n\n  // Assign random X and Z (depth) to each message, memoized by message id\n  const floatingMessages = useMemo(() => {\n    return messages.map((msg, idx) => {\n      // Use a seeded random based on message id for consistent placement\n      const seed = msg.id.split('').reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\n      const randX = (Math.sin(seed) + 1) / 2 * 0.7 + 0.15; // 0.15 to 0.85 (as % of width)\n      const randZ = (Math.cos(seed) + 1) / 2 * 0.7 + 0.15; // 0.15 to 0.85 (as depth factor)\n      return {\n        ...msg,\n        randX,\n        randZ\n      };\n    });\n  }, [messages]);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewportHeight(window.innerHeight);\n      setViewportWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Scroll handler\n  const handleScroll = () => {\n    setScroll(containerRef.current.scrollTop);\n  };\n\n  // Each message is spaced vertically by this many px\n  const verticalSpacing = 220;\n  // The total height of the scrollable area\n  const totalHeight = Math.max(floatingMessages.length * verticalSpacing + viewportHeight, viewportHeight * 2);\n\n  // Style for each message\n  const getMessageStyle = (idx, randX, randZ) => {\n    // Y position in the scrollable area\n    const y = idx * verticalSpacing;\n    // As you scroll, messages move up\n    const relativeY = y - scroll + viewportHeight / 2 - 100;\n    // X position: random within 15% to 85% of viewport width\n    const x = randX * viewportWidth;\n    // Depth: scale and opacity\n    const scale = 0.7 + randZ * 0.7; // 0.7 to 1.4\n    // Fade in/out as they approach the center\n    const centerY = viewportHeight / 2;\n    const distFromCenter = Math.abs(relativeY - centerY);\n    const opacity = Math.max(0, 1 - distFromCenter / (viewportHeight / 1.2));\n    return {\n      position: 'absolute',\n      top: y,\n      left: x,\n      transform: `translate(-50%, 0) scale(${scale})`,\n      opacity,\n      color: 'white',\n      fontWeight: 300,\n      fontSize: '2rem',\n      pointerEvents: 'none',\n      whiteSpace: 'pre-line',\n      textAlign: 'center',\n      filter: `blur(${(1 - opacity) * 2}px)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"relative w-full h-full overflow-y-scroll bg-black\",\n    style: {\n      height: '100vh',\n      paddingBottom: 100\n    },\n    tabIndex: 0,\n    onScroll: handleScroll,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: totalHeight\n      },\n      children: [floatingMessages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '40%',\n          left: '50%',\n          transform: 'translate(-50%, 0)',\n          color: '#fff',\n          opacity: 0.3,\n          fontSize: '2rem',\n          textAlign: 'center'\n        },\n        children: \"The Void is silent... for now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), floatingMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: getMessageStyle(idx, msg.randX, msg.randZ),\n        children: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s2(MessageList, \"Z9k6JOzTuyqxks7A+T2tVhEh8Ic=\");\n_c2 = MessageList;\nexport default function App() {\n  _s3();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const messageData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(messageData);\n    }, error => {\n      console.error('Error fetching messages:', error);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSend = async text => {\n    setLoading(true);\n    try {\n      await import('firebase/firestore').then(({\n        collection,\n        addDoc,\n        serverTimestamp\n      }) => addDoc(collection(db, 'messages'), {\n        text,\n        timestamp: serverTimestamp()\n      }));\n    } catch (e) {\n      alert('Failed to send message. Please try again.');\n      console.error('Error adding message:', e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black w-full h-screen min-h-screen overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: handleSend,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"OWiw6xYK6UqySRWWjzGN6db1MoE=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageInput\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","collection","onSnapshot","orderBy","query","db","jsxDEV","_jsxDEV","MessageInput","onSend","loading","_s","message","setMessage","inputRef","handleSend","_inputRef$current","trim","length","current","focus","className","style","zIndex","children","ref","type","maxLength","placeholder","value","onChange","e","target","onKeyDown","key","disabled","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","getRandomFloat","min","max","Math","random","MessageList","messages","_s2","containerRef","scroll","setScroll","viewportHeight","setViewportHeight","window","innerHeight","viewportWidth","setViewportWidth","innerWidth","floatingMessages","map","msg","idx","seed","id","split","reduce","acc","c","charCodeAt","randX","sin","randZ","cos","handleResize","addEventListener","removeEventListener","handleScroll","scrollTop","verticalSpacing","totalHeight","getMessageStyle","y","relativeY","x","scale","centerY","distFromCenter","abs","opacity","position","top","left","transform","color","fontWeight","fontSize","pointerEvents","whiteSpace","textAlign","filter","height","paddingBottom","tabIndex","onScroll","text","_c2","App","_s3","setMessages","setLoading","q","unsubscribe","snapshot","messageData","docs","doc","data","error","console","then","addDoc","serverTimestamp","timestamp","alert","_c3","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nfunction MessageInput({ onSend, loading }) {\r\n  const [message, setMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim() || message.length > 500) return;\r\n    await onSend(message.trim());\r\n    setMessage('');\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed bottom-0 left-0 w-full bg-black flex items-center px-4 py-3\" style={{zIndex: 10}}>\r\n      <input\r\n        ref={inputRef}\r\n        className=\"flex-1 bg-black text-white border-none outline-none text-lg placeholder-gray-500 px-2 py-3\"\r\n        type=\"text\"\r\n        maxLength={500}\r\n        placeholder=\"Speak into The Void...\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n        aria-label=\"Type your message to send to The Void\"\r\n        onKeyDown={e => { if (e.key === 'Enter') handleSend(); }}\r\n        disabled={loading}\r\n        autoFocus\r\n      />\r\n      <button\r\n        className=\"ml-2 text-white text-lg font-bold px-4 py-2 bg-black border border-white rounded transition-opacity disabled:opacity-40\"\r\n        onClick={handleSend}\r\n        disabled={loading || !message.trim() || message.length > 500}\r\n      >\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getRandomFloat(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction MessageList({ messages }) {\r\n  const containerRef = useRef(null);\r\n  const [scroll, setScroll] = useState(0);\r\n  const [viewportHeight, setViewportHeight] = useState(window.innerHeight);\r\n  const [viewportWidth, setViewportWidth] = useState(window.innerWidth);\r\n\r\n  // Assign random X and Z (depth) to each message, memoized by message id\r\n  const floatingMessages = useMemo(() => {\r\n    return messages.map((msg, idx) => {\r\n      // Use a seeded random based on message id for consistent placement\r\n      const seed =\r\n        msg.id\r\n          .split('')\r\n          .reduce((acc, c) => acc + c.charCodeAt(0), 0) + idx;\r\n      const randX = ((Math.sin(seed) + 1) / 2) * 0.7 + 0.15; // 0.15 to 0.85 (as % of width)\r\n      const randZ = ((Math.cos(seed) + 1) / 2) * 0.7 + 0.15; // 0.15 to 0.85 (as depth factor)\r\n      return {\r\n        ...msg,\r\n        randX,\r\n        randZ,\r\n      };\r\n    });\r\n  }, [messages]);\r\n\r\n  // Update viewport size on resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setViewportHeight(window.innerHeight);\r\n      setViewportWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Scroll handler\r\n  const handleScroll = () => {\r\n    setScroll(containerRef.current.scrollTop);\r\n  };\r\n\r\n  // Each message is spaced vertically by this many px\r\n  const verticalSpacing = 220;\r\n  // The total height of the scrollable area\r\n  const totalHeight = Math.max(floatingMessages.length * verticalSpacing + viewportHeight, viewportHeight * 2);\r\n\r\n  // Style for each message\r\n  const getMessageStyle = (idx, randX, randZ) => {\r\n    // Y position in the scrollable area\r\n    const y = idx * verticalSpacing;\r\n    // As you scroll, messages move up\r\n    const relativeY = y - scroll + viewportHeight / 2 - 100;\r\n    // X position: random within 15% to 85% of viewport width\r\n    const x = randX * viewportWidth;\r\n    // Depth: scale and opacity\r\n    const scale = 0.7 + randZ * 0.7; // 0.7 to 1.4\r\n    // Fade in/out as they approach the center\r\n    const centerY = viewportHeight / 2;\r\n    const distFromCenter = Math.abs(relativeY - centerY);\r\n    const opacity = Math.max(0, 1 - distFromCenter / (viewportHeight / 1.2));\r\n    return {\r\n      position: 'absolute',\r\n      top: y,\r\n      left: x,\r\n      transform: `translate(-50%, 0) scale(${scale})`,\r\n      opacity,\r\n      color: 'white',\r\n      fontWeight: 300,\r\n      fontSize: '2rem',\r\n      pointerEvents: 'none',\r\n      whiteSpace: 'pre-line',\r\n      textAlign: 'center',\r\n      filter: `blur(${(1 - opacity) * 2}px)`\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"relative w-full h-full overflow-y-scroll bg-black\"\r\n      style={{ height: '100vh', paddingBottom: 100 }}\r\n      tabIndex={0}\r\n      onScroll={handleScroll}\r\n    >\r\n      <div style={{ position: 'relative', height: totalHeight }}>\r\n        {floatingMessages.length === 0 && (\r\n          <div style={{ position: 'absolute', top: '40%', left: '50%', transform: 'translate(-50%, 0)', color: '#fff', opacity: 0.3, fontSize: '2rem', textAlign: 'center' }}>\r\n            The Void is silent... for now.\r\n          </div>\r\n        )}\r\n        {floatingMessages.map((msg, idx) => (\r\n          <div key={msg.id} style={getMessageStyle(idx, msg.randX, msg.randZ)}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'messages'), orderBy('timestamp', 'desc'));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const messageData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setMessages(messageData);\r\n    }, (error) => {\r\n      console.error('Error fetching messages:', error);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleSend = async (text) => {\r\n    setLoading(true);\r\n    try {\r\n      await import('firebase/firestore').then(({ collection, addDoc, serverTimestamp }) =>\r\n        addDoc(collection(db, 'messages'), {\r\n          text,\r\n          timestamp: serverTimestamp(),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      alert('Failed to send message. Please try again.');\r\n      console.error('Error adding message:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black w-full h-screen min-h-screen overflow-hidden\">\r\n      <MessageList messages={messages} />\r\n      <MessageInput onSend={handleSend} loading={loading} />\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}