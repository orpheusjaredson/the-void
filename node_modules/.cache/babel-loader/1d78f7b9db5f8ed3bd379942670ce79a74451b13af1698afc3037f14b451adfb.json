{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\The Void\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [scattered, setScattered] = useState([]); // Scattered messages for the void\n  const prevWidthRef = useRef(window.innerWidth);\n  const SCATTER_HEIGHT = viewport.height * 10; // Tall scrollable area\n  const SPAWN_COUNT = 40; // Number of times to spawn each message\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport(prev => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setScattered(floaters => floaters.map(f => {\n          // Calculate ratio of previous X position\n          const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n          const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n          const newX = ratio * (newWidth - newMsgWidth);\n          return {\n            ...f,\n            x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n            width: newMsgWidth\n          };\n        }));\n        prevWidthRef.current = newWidth;\n        return {\n          width: newWidth,\n          height: window.innerHeight\n        };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Scatter messages in a tall area\n  useEffect(() => {\n    if (!messages.length) return;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const placed = [];\n    let nextId = 0;\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n    for (let spawn = 0; spawn < SPAWN_COUNT; spawn++) {\n      messages.forEach((msg, idx) => {\n        const baseSeed = getSeed(msg.id || \"\" + idx) + spawn * 100000;\n        const fontSize = 1.0 + seededRandom(baseSeed + 2) * (maxFontSize - minFontSize);\n        const width = maxWidth;\n        const height = estimateTextHeight(msg.text, fontSize);\n        const x = seededRandom(baseSeed) * (viewport.width - width);\n        const y = seededRandom(baseSeed + 100) * (SCATTER_HEIGHT - height);\n        placed.push({\n          id: `scattered-${nextId++}`,\n          text: msg.text,\n          x,\n          y,\n          fontSize,\n          width,\n          height\n        });\n      });\n    }\n    setScattered(placed);\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp()\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative overflow-y-scroll\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        background: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: viewport.width,\n          height: SCATTER_HEIGHT,\n          margin: \"0 auto\"\n        },\n        children: scattered.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: msg.x,\n            top: msg.y,\n            fontSize: `${msg.fontSize}em`,\n            color: \"white\",\n            maxWidth: msg.width,\n            wordBreak: \"break-word\",\n            pointerEvents: \"auto\",\n            userSelect: \"text\",\n            fontWeight: 400,\n            opacity: 0.95,\n            lineHeight: 1.2,\n            transition: \"none\"\n          },\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\",\n      autoComplete: \"off\",\n      style: {\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Send a message into the void...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EQqgk9J+Jh/pSQM/oJQ1xdxdQ0E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","seededRandom","seed","x","Math","sin","floor","getSeed","str","hash","i","length","charCodeAt","randomBetween","a","b","random","App","_s","messages","setMessages","input","setInput","viewport","setViewport","width","window","innerWidth","height","innerHeight","scattered","setScattered","prevWidthRef","SCATTER_HEIGHT","SPAWN_COUNT","q","unsubscribe","querySnapshot","msgs","forEach","doc","push","id","data","handleResize","prev","newWidth","oldWidth","current","floaters","map","f","ratio","newMsgWidth","min","newX","max","addEventListener","removeEventListener","minFontSize","maxFontSize","maxWidth","placed","nextId","estimateTextHeight","text","fontSize","charsPerLine","lines","ceil","spawn","msg","idx","baseSeed","y","sendMessage","e","preventDefault","trimmed","trim","timestamp","className","children","style","minHeight","background","position","margin","left","top","color","wordBreak","pointerEvents","userSelect","fontWeight","opacity","lineHeight","transition","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","bottom","zIndex","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["E:/Coding/The Void/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\n\nfunction seededRandom(seed) {\n  let x = Math.sin(seed) * 10000;\n  return x - Math.floor(x);\n}\n\nfunction getSeed(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction randomBetween(a, b) {\n  return a + Math.random() * (b - a);\n}\n\nexport default function App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [viewport, setViewport] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [scattered, setScattered] = useState([]); // Scattered messages for the void\n  const prevWidthRef = useRef(window.innerWidth);\n  const SCATTER_HEIGHT = viewport.height * 10; // Tall scrollable area\n  const SPAWN_COUNT = 40; // Number of times to spawn each message\n\n  // Firestore listener\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push({ id: doc.id, ...doc.data() });\n      });\n      setMessages(msgs);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Update viewport size on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport((prev) => {\n        const newWidth = window.innerWidth;\n        const oldWidth = prevWidthRef.current;\n        setScattered((floaters) =>\n          floaters.map((f) => {\n            // Calculate ratio of previous X position\n            const ratio = oldWidth > f.width ? f.x / (oldWidth - f.width) : 0;\n            const newMsgWidth = Math.min(f.width, 0.6 * newWidth, 340);\n            const newX = ratio * (newWidth - newMsgWidth);\n            return {\n              ...f,\n              x: Math.max(0, Math.min(newX, newWidth - newMsgWidth)),\n              width: newMsgWidth,\n            };\n          })\n        );\n        prevWidthRef.current = newWidth;\n        return { width: newWidth, height: window.innerHeight };\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Scatter messages in a tall area\n  useEffect(() => {\n    if (!messages.length) return;\n    const minFontSize = 1.0;\n    const maxFontSize = 2.0;\n    const maxWidth = Math.min(0.6 * viewport.width, 340);\n    const placed = [];\n    let nextId = 0;\n    function estimateTextHeight(text, fontSize) {\n      const charsPerLine = Math.floor(maxWidth / (fontSize * 16));\n      const lines = Math.ceil(text.length / charsPerLine);\n      return lines * fontSize * 16 * 1.2;\n    }\n    for (let spawn = 0; spawn < SPAWN_COUNT; spawn++) {\n      messages.forEach((msg, idx) => {\n        const baseSeed = getSeed(msg.id || \"\" + idx) + spawn * 100000;\n        const fontSize = 1.0 + seededRandom(baseSeed + 2) * (maxFontSize - minFontSize);\n        const width = maxWidth;\n        const height = estimateTextHeight(msg.text, fontSize);\n        const x = seededRandom(baseSeed) * (viewport.width - width);\n        const y = seededRandom(baseSeed + 100) * (SCATTER_HEIGHT - height);\n        placed.push({\n          id: `scattered-${nextId++}`,\n          text: msg.text,\n          x,\n          y,\n          fontSize,\n          width,\n          height,\n        });\n      });\n    }\n    setScattered(placed);\n    // eslint-disable-next-line\n  }, [messages, viewport.width, viewport.height]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    await addDoc(collection(db, \"messages\"), {\n      text: trimmed,\n      timestamp: serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-black text-white\">\n      <div\n        className=\"flex-1 relative overflow-y-scroll\"\n        style={{ width: \"100%\", height: \"100%\", minHeight: 0, background: \"black\" }}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            width: viewport.width,\n            height: SCATTER_HEIGHT,\n            margin: \"0 auto\",\n          }}\n        >\n          {scattered.map((msg) => (\n            <div\n              key={msg.id}\n              style={{\n                position: \"absolute\",\n                left: msg.x,\n                top: msg.y,\n                fontSize: `${msg.fontSize}em`,\n                color: \"white\",\n                maxWidth: msg.width,\n                wordBreak: \"break-word\",\n                pointerEvents: \"auto\",\n                userSelect: \"text\",\n                fontWeight: 400,\n                opacity: 0.95,\n                lineHeight: 1.2,\n                transition: \"none\",\n              }}\n            >\n              {msg.text}\n            </div>\n          ))}\n        </div>\n      </div>\n      <form\n        onSubmit={sendMessage}\n        className=\"w-full flex items-center px-4 py-3 border-t border-gray-800 bg-black\"\n        autoComplete=\"off\"\n        style={{ position: \"sticky\", bottom: 0, zIndex: 10 }}\n      >\n        <input\n          className=\"flex-1 bg-transparent border border-gray-700 rounded px-4 py-2 text-white focus:outline-none focus:border-white placeholder-gray-500\"\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Send a message into the void...\"\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          className=\"ml-3 px-4 py-2 bg-white text-black rounded hover:bg-gray-200 transition\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}